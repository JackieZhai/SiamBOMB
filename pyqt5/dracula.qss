QWidget, QStackedWidget,
QScrollArea, QAbstractScrollArea {
    background-color: transparent;
    color: #b1b1b1;
}

QApplication,
QMainWindow, QFrame, QDockWidget, QDialog, QFileDialog, QMessageBox,
QRadioButton,
QGroupBox::title, /* Need to set background becase must clear border behind label */
QMenuBar, QMenu, QMenu::item,
QComboBox QAbstractItemView,
QTreeView, QListWidget, QListView, QTableWidget, QTableView,
QTextEdit {
    background-color: #3c3f41; /*#004100;*/
    color: #bbbbbb;
}
QTextBrowser{
    background-color: #3c3f41; /*#004100;*/
    color: #bbbbbb;
}

QLabel, QTabBar::tab, QMenuBar::item,
QCheckBox, QGroupBox {
    background-color: transparent;
    color: #bbbbbb;
    selection-color: #bbbbbb;
}

QGroupBox {
    border-top: 1px solid #2d2d2d;
    margin-top: 0.5em;
}
QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top left;
    padding: 0 3px;
}
QCheckBox::indicator,
QGroupBox::indicator {
    width: 20px;
    height: 20px;
}
QCheckBox::indicator:unchecked,
QGroupBox::indicator:unchecked {
    background-color: #bbbbbb;
}
QCheckBox::indicator:unchecked:hover,
QGroupBox::indicator:unchecked:hover {
}
QCheckBox::indicator:unchecked:pressed,
QGroupBox::indicator:unchecked:pressed {
    background-color: #4b6eaf;
}
QCheckBox::indicator:checked,
QGroupBox::indicator:checked {
    background-color: #4b6eaf;
}
QCheckBox::indicator:checked:hover,
QGroupBox::indicator:checked:hover {
}
QCheckBox::indicator:checked:pressed,
QGroupBox::indicator:checked:pressed {
    background-color: #bbbbbb;
}
QCheckBox::indicator:indeterminate:hover,
QGroupBox::indicator:indeterminate:hover {
    background-color: #2222bb;
}
QCheckBox::indicator:indeterminate:pressed,
QGroupBox::indicator:indeterminate:pressed {
    background-color: #22bb22;
}

QLineEdit, QAbstractSpinBox, QComboBox, QPushButton {
    background-color: #45494a;
    /*background-color: rgba(255, 255, 255, 0.05);*/

    background-origin: border;
    border: 1px solid #646464;
    color: #bbbbbb;
    padding: 0px 1px 2px 3px;
    selection-background-color: #4b6eaf;
}/*:focus
{
    outline: 3px ridge #4e78a2;
    border-radius: 2px;
}
:edit-focus
{
    border: 1px solid red;
}*/
:read-only {
    background-color: transparent;
    border: 1px solid #535353;
    color: #999999;
}
:no-frame {
    border-width: 0;
}

QAbstractSpinBox::up-button {
}
QAbstractSpinBox::up-button:hover {
}
QAbstractSpinBox::up-button:off {
}
QAbstractSpinBox::up-button:pressed {
}
QAbstractSpinBox::down-button {
}
QAbstractSpinBox::down-button:hover {
}
QAbstractSpinBox::down-button:off {
}
QAbstractSpinBox::down-button:pressed {
}

QPushButton {
    min-height: 1.33em;
    min-width: 7em;
    outline: 0;
}
Utils--QtColorButton,
QPushButton {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #515658, stop: 1.0 #44494b);
    border: 1px solid #5f6161;
    border-radius: 2px;
}
Utils--QtColorButton:pressed,
QPushButton:pressed {
    border-style: inset;
}
QPushButton:default {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop: 0 #344a64, stop: 1.0 #263549);
}
Utils--QtColorButton:disabled,
QPushButton:disabled {
    background-color: transparent;
    color: #999999;
}
Utils--QtColorButton:open,
QPushButton:open {
    background-color: #4b6eaf;
}
QPushButton::menu-indicator  {
    subcontrol-origin: content;
    subcontrol-position: bottom right;
}

QComboBox {
    border-radius: 2px;
    min-width: 3em;
    padding: 0px 1px 2px 3px;
}
QComboBox:!editable {
    /*background-color: rgba(63, 113, 73, 0.2);*/
    /*background-color: #45494a;*/
    background-color: rgba(255, 255, 255, 0.05);
}
/*
QComboBox:!editable:on
QComboBox::drop-down:editable:on
QComboBox::drop-down:editable
*/
QComboBox:on {
    padding-top: 3px;
    padding-left: 4px;
}
QComboBox::down-arrow {
}
QComboBox::down-arrow:on {
    top: 1px;
    left: 1px;
}
QComboBox::drop-down {
    border-left: 1px solid #646464;
}
QComboBox QAbstractItemView {
    border: 1px solid red;/*black;*/
    selection-background-color: #d2d2d2;
    selection-color: #404040;
    show-decoration-selected: 1; /* make the selection span the entire width of the view */
}

QRadioButton::indicator {
    width: 13px;
    height: 13px;
}
QRadioButton::indicator:unchecked {
}
QRadioButton::indicator:unchecked:hover {
}
QRadioButton::indicator:unchecked:pressed {
}
QRadioButton::indicator:checked {
}
QRadioButton::indicator:checked:hover {
}
QRadioButton::indicator:checked:pressed {
}

QTabWidget::tab-bar {
    /*position: relative;
    bottom: -1px;*/
}
QTabWidget::pane {
    background-color: transparent;
    border: 1px solid #323232;
}
QTabWidget::pane:top {
    top: -1px;
}
QTabWidget::pane:right {
    right: -1px;
}
QTabWidget::pane:bottom {
    bottom: -1px;
}
QTabWidget::pane:left {
    left: -1px;
}
QTabBar::tab {
    border: 1px solid #292b2d;
    min-width: 8ex;
    padding: 4px;
}
/*QTabBar::tab:hover {
    background-color: #4b6eaf;
}*/
QTabBar::tab:top {
    border-top-left-radius: 4px;
    border-top-right-radius: 4px;
}
QTabBar::tab:right {
    border-top-right-radius: 4px;
    border-bottom-right-radius: 4px;
}
QTabBar::tab:bottom {
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
}
QTabBar::tab:left {
    border-top-left-radius: 4px;
    border-bottom-left-radius: 4px;
}
QTabBar::tab:selected {
    background-color: #41516d;
}
QTabBar::tab:top:selected {
    border-bottom-color: #41516d;
}
QTabBar::tab:right:selected {
    border-left-color: #41516d;
}
QTabBar::tab:bottom:selected {
    border-top-color: #41516d;
}
QTabBar::tab:left:selected {
    border-right-color: #41516d;
}
QTabBar::tab:top:!selected {
    margin-top: 2px;
}
QTabBar::tab:right:!selected {
    margin-right: 2px;
}
QTabBar::tab:bottom:!selected {
    margin-bottom: 2px;
}
QTabBar::tab:left:!selected {
    margin-left: 2px;
}

QTableWidget,
QTableView {
    /* This rule have more priority than previous?!
     * And overrides with empty if not declared! */
    /*color: #bbbbbb;*/

    border: 1px solid #323232;
    alternate-background-color: #414547; /* Dont work without setAlternatingRowColors(true) */
}
QTableView QTableCornerButton::section {
    background-color: green; /*FIXME*/
    border: 2px outset blue; /*FIXME*/
}
QHeaderView::section {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #54585b, stop:1 #393c3e);
    color: #bbbbbb;
    padding: 1px 2px 1px 4px;

    border: 1px solid #323232;
    border-top-width: 0;
    border-left-color: #5e6163;
    border-right-color: #2a2c2d;

    /*min-height: 15px;*/
}
QHeaderView::section:hover {
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #64686b, stop:1 #494c4e);
    border-bottom-color: #424242;
}
QHeaderView::section:first {
    border-left-width: 0;
}
QHeaderView::section:last {
    border-right-width: 0;
}
QHeaderView::section:checked {
    background-color: red; /*FIXME*/
}
QHeaderView::down-arrow {
    right: 7px;
}
QHeaderView::up-arrow {
    /*right: 7px; */
    height: 7px;
    width: 7px;
}

QMenuBar {
    background-color: #3c3f41; /* transparent don't work */
    border-bottom: 2px solid qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #282828, stop:1 #555555);
}
QMenuBar::item:pressed {
    background-color: #4b6eaf;
}
QMenuBar::item:selected:!pressed {
    background-color: #585b5d;
}
QMenu {
    border: 1px solid #2d2d2d;
}
/*QMenu::item {
    margin-left: 3px;
}*/
QMenu::item:disabled {
    color: #999999;
}
QMenu::item:selected {
    background-color: #4b6eaf;
}
QMenu::icon {
    border: 0px solid transparent;
    background-color: transparent;
}
QMenu::icon:checked {
    background-color: blue;
    border: 1px inset red;
    position: absolute;
    top: 1px;
    right: 1px;
    bottom: 1px;
    left: 1px;
}
QMenu::separator {
    height: 2px;
    background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #282a2b, stop:1 #45484b);
    margin: 0 1px;
}
/*QMenu::indicator {
    width: 13px;
    height: 13px;
    background-color: blue;
}*/

QProgressBar
{
    border: 2px solid grey;
    border-radius: 5px;
    text-align: center;
}

QProgressBar::chunk
{
    background-color: #4b6eaf;
    width: 23px;
    margin: 2px;
}

QScrollBar:horizontal {
     border: 1px solid #b1b1b1;
     background: transparent;
     height: 7px;
     margin: 0px 32px 0 32px;
}
QScrollBar::handle:horizontal
{
      background-color: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1, stop:0 #5c5c5c, stop:1 #515151);
      min-height: 20px;
      min-width: 23px;
      border-radius: 2px;
}
QScrollBar::add-line:horizontal {
      border: 1px solid #b1b1b1;
      border-radius: 2px;
      background: #4b6eaf;
      width: 30px;
      subcontrol-position: right;
      subcontrol-origin: margin;
}
QScrollBar::sub-line:horizontal {
      border: 1px solid #b1b1b1;
      border-radius: 2px;
      background: #4b6eaf;
      width: 30px;
     subcontrol-position: left;
     subcontrol-origin: margin;
}
QScrollBar::right-arrow:horizontal, QScrollBar::left-arrow:horizontal
{
      border: 1px solid #b1b1b1;
      width: 10;
      height: 10px;
      background: #b1b1b1;
}
QScrollBar::add-page:horizontal, QScrollBar::sub-page:horizontal
{
      background: none;
}

QAbstractItemView {
    border: 1px solid #323232;
    selection-color: #bbbbbb;
    selection-background-color: #4b6eaf;
    alternate-background-color: #414547; /* Works only if setAlternatingRowColors(true) */
    show-decoration-selected: 1;
    outline: 0;
}

QAbstractItemView::item:alternate {
    background-color: #414547;
}
QListWidgetItem,
QTreeWidgetItem  {
    background-color: red;
    color: yellow;
    border: 1px solid purple;
}
QAbstractItemView::text {
    color: #bbbbbb;
}
QTreeView::branch:hover,
QAbstractItemView::item:hover {
    background-color: rgba(255, 255, 255, 0.05);
}
QTreeView::branch:selected:active,
QAbstractItemView::item:selected {
    background-color: #4b6eaf;
}
/* No way due to another bug :(
QTreeView::branch:selected:active,
QAbstractItemView::item:selected:active {
    background-color: #4b6eaf;
}
QTreeView::branch:selected:!active,
QAbstractItemView::item:selected:!active {
    background-color: #0d293e;
}
*/
QTreeView::branch:has-siblings:adjoins-item,
QTreeView::branch:has-siblings:!adjoins-item,
QTreeView::branch:!has-children:!has-siblings:adjoins-item {
    border-image: none;
    image: none;
}
QTreeView::branch:has-children:!has-siblings:closed,
QTreeView::branch:closed:has-children:has-siblings {
    border-image: none;
}
QTreeView::branch:open:has-children:!has-siblings,
QTreeView::branch:open:has-children:has-siblings {
    border-image: none;
}

QToolBar {
    border-width: 0; /* Cancels gradiend */
}

QSizeGrip {
    width: 16px;
    height: 16px;
}

QToolTip, QTipLabel {
    border: 1px solid #9a9a66;
    border-radius: 3px;
    background: #5c5c42;
    color: #bbbbbb;
    margin: 0;
    padding: 0;
}

QWizard > QWidget {
    background-color: #3c3f41;
}

/* QT-BUG: Because QFrame { border-color: #323232; } has no effect */
Core--Internal--NewDialog > QFrame#frame {
    border: 1px solid #323232;
}

/* vvvvvvvvvvvvvvvvvvvvvvvvvv WORKAROUND vvvvvvvvvvvvvvvvvvvvvvvvvv */
/* Related to:
 *   1) https://bugreports.qt-project.org/browse/QTCREATORBUG-12078
 *   2) https://codereview.qt-project.org/#/c/74538/
 * Because of bugs in QtGui, apllying stylesheet to QPlainTextEdit causes it
 * to lose font settings and palette on setParent event. So switching between
 * modes (Editor and Debug) or split Editor resets font and color of edit
 * and extra edit areas
 * To workaround this problems set you own peferred colors and font below
 */
QPlainTextEdit {
    background-color: #2b2b2b;
    selection-background-color: #214283;
    color: #bbbbbb;
    selection-color: #bbbbbb; /* No better workaround for this */
    font: 10pt Courier, Inconsolata, Monospace;
}
/*TextEditor--Internal--TextEditExtraArea*/
TextEditor--TextEditorWidget > QWidget {
    background-color: #313335;
    selection-background-color: #4b6eaf;
    color: #bbbbbb; /* QT-BUG: Sadly this has no effect */
}
/* ^^^^^^^^^^^^^^^^^^^^^^^^^^ WORKAROUND ^^^^^^^^^^^^^^^^^^^^^^^^^^ */